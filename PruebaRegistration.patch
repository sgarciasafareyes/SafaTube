Subject: [PATCH] Changes
---
Index: templates/auth/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/auth/index.html.twig b/templates/auth/index.html.twig
deleted file mode 100644
--- a/templates/auth/index.html.twig	
+++ /dev/null	
@@ -1,20 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Hello AuthController!{% endblock %}
-
-{% block body %}
-<style>
-    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
-    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
-</style>
-
-<div class="example-wrapper">
-    <h1>Hello {{ controller_name }}! ✅</h1>
-
-    This friendly message is coming from:
-    <ul>
-        <li>Your controller at <code><a href="{{ 'C:/Users/sebas/PhpstormProjects/safatube/src/Controller/AuthController.php'|file_link(0) }}">src/Controller/AuthController.php</a></code></li>
-        <li>Your template at <code><a href="{{ 'C:/Users/sebas/PhpstormProjects/safatube/templates/auth/index.html.twig'|file_link(0) }}">templates/auth/index.html.twig</a></code></li>
-    </ul>
-</div>
-{% endblock %}
Index: templates/security/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/security/index.html.twig b/templates/security/index.html.twig
deleted file mode 100644
--- a/templates/security/index.html.twig	
+++ /dev/null	
@@ -1,20 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Hello SecurityController!{% endblock %}
-
-{% block body %}
-<style>
-    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
-    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
-</style>
-
-<div class="example-wrapper">
-    <h1>Hello {{ controller_name }}! ✅</h1>
-
-    This friendly message is coming from:
-    <ul>
-        <li>Your controller at <code><a href="{{ '/home/gerofante/PhpstormProjects/SafaTube/src/Controller/SecurityController.php'|file_link(0) }}">src/Controller/SecurityController.php</a></code></li>
-        <li>Your template at <code><a href="{{ '/home/gerofante/PhpstormProjects/SafaTube/templates/security/index.html.twig'|file_link(0) }}">templates/security/index.html.twig</a></code></li>
-    </ul>
-</div>
-{% endblock %}
Index: templates/send_email/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/send_email/index.html.twig b/templates/send_email/index.html.twig
deleted file mode 100644
--- a/templates/send_email/index.html.twig	
+++ /dev/null	
@@ -1,20 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Hello SendEmailController!{% endblock %}
-
-{% block body %}
-<style>
-    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
-    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
-</style>
-
-<div class="example-wrapper">
-    <h1>Hello {{ controller_name }}! ✅</h1>
-
-    This friendly message is coming from:
-    <ul>
-        <li>Your controller at <code><a href="{{ 'C:/Users/sebas/PhpstormProjects/safatube/src/Controller/SendEmailController.php'|file_link(0) }}">src/Controller/SendEmailController.php</a></code></li>
-        <li>Your template at <code><a href="{{ 'C:/Users/sebas/PhpstormProjects/safatube/templates/send_email/index.html.twig'|file_link(0) }}">templates/send_email/index.html.twig</a></code></li>
-    </ul>
-</div>
-{% endblock %}
Index: templates/auth/login.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/auth/login.html.twig b/templates/auth/login.html.twig
deleted file mode 100644
--- a/templates/auth/login.html.twig	
+++ /dev/null	
@@ -1,21 +0,0 @@
-{# templates/auth/login.html.twig #}
-
-{% extends 'base.html.twig' %}
-
-{% block body %}
-    <div class="container">
-        <form method="post" action="{{ path('login') }}">
-            {% if error %}
-                <div class="alert alert-danger">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
-            {% endif %}
-
-            <label for="username">Username:</label>
-            <input type="text" id="username" name="_username" value="{{ last_username }}" required autofocus>
-
-            <label for="password">Password:</label>
-            <input type="password" id="password" name="_password" required>
-
-            <button type="submit">Login</button>
-        </form>
-    </div>
-{% endblock %}
Index: templates/emails/verification.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/emails/verification.html.twig b/templates/emails/verification.html.twig
deleted file mode 100644
--- a/templates/emails/verification.html.twig	
+++ /dev/null	
@@ -1,7 +0,0 @@
-<!DOCTYPE html>
-<html>
-<body>
-<p>Haz clic en el siguiente enlace para verificar tu correo electrónico:</p>
-<a href="{{ path('verificar_usuario', {'token': token}) }}">Verificar Email</a>
-</body>
-</html>
Index: composer.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/composer.lock b/composer.lock
--- a/composer.lock	
+++ b/composer.lock	
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "2080966ded47ec636d20df83cd037240",
+    "content-hash": "f25ee1fe41064e1cc40a412a5a80708d",
     "packages": [
         {
             "name": "api-platform/core",
@@ -4397,16 +4397,16 @@
         },
         {
             "name": "symfony/google-mailer",
-            "version": "v6.4.0",
+            "version": "v6.4.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/google-mailer.git",
-                "reference": "e3053e79542cd39467ce53dd296ce0ea4bd3a16c"
+                "reference": "01f5512e17f72814a50ed8bd21bea222acff2fbc"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/google-mailer/zipball/e3053e79542cd39467ce53dd296ce0ea4bd3a16c",
-                "reference": "e3053e79542cd39467ce53dd296ce0ea4bd3a16c",
+                "url": "https://api.github.com/repos/symfony/google-mailer/zipball/01f5512e17f72814a50ed8bd21bea222acff2fbc",
+                "reference": "01f5512e17f72814a50ed8bd21bea222acff2fbc",
                 "shasum": ""
             },
             "require": {
@@ -4442,7 +4442,7 @@
             "description": "Symfony Google Mailer Bridge",
             "homepage": "https://symfony.com",
             "support": {
-                "source": "https://github.com/symfony/google-mailer/tree/v6.4.0"
+                "source": "https://github.com/symfony/google-mailer/tree/v6.4.3"
             },
             "funding": [
                 {
@@ -4458,7 +4458,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2023-05-23T16:34:37+00:00"
+            "time": "2024-01-23T14:51:35+00:00"
         },
         {
             "name": "symfony/http-client",
@@ -4905,16 +4905,16 @@
         },
         {
             "name": "symfony/mailer",
-            "version": "v6.4.2",
+            "version": "v6.4.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/mailer.git",
-                "reference": "6da89e5c9202f129717a770a03183fb140720168"
+                "reference": "74412c62f88a85a41b61f0b71ab0afcaad6f03ee"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/mailer/zipball/6da89e5c9202f129717a770a03183fb140720168",
-                "reference": "6da89e5c9202f129717a770a03183fb140720168",
+                "url": "https://api.github.com/repos/symfony/mailer/zipball/74412c62f88a85a41b61f0b71ab0afcaad6f03ee",
+                "reference": "74412c62f88a85a41b61f0b71ab0afcaad6f03ee",
                 "shasum": ""
             },
             "require": {
@@ -4965,7 +4965,7 @@
             "description": "Helps sending emails",
             "homepage": "https://symfony.com",
             "support": {
-                "source": "https://github.com/symfony/mailer/tree/v6.4.2"
+                "source": "https://github.com/symfony/mailer/tree/v6.4.3"
             },
             "funding": [
                 {
@@ -4981,7 +4981,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2023-12-19T09:12:31+00:00"
+            "time": "2024-01-29T15:01:07+00:00"
         },
         {
             "name": "symfony/mailer-send-mailer",
@@ -8177,6 +8177,52 @@
             "time": "2023-11-06T11:00:25+00:00"
         },
         {
+            "name": "symfonycasts/verify-email-bundle",
+            "version": "v1.16.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/SymfonyCasts/verify-email-bundle.git",
+                "reference": "418f33c5112bb2ee2ae7132e52100b279264ff52"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/SymfonyCasts/verify-email-bundle/zipball/418f33c5112bb2ee2ae7132e52100b279264ff52",
+                "reference": "418f33c5112bb2ee2ae7132e52100b279264ff52",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "php": ">=8.1",
+                "symfony/config": "^5.4 | ^6.0 | ^7.0",
+                "symfony/dependency-injection": "^5.4 | ^6.0 | ^7.0",
+                "symfony/deprecation-contracts": "^2.2 | ^3.0",
+                "symfony/http-kernel": "^5.4 | ^6.0 | ^7.0",
+                "symfony/routing": "^5.4 | ^6.0 | ^7.0"
+            },
+            "require-dev": {
+                "doctrine/orm": "^2.7",
+                "doctrine/persistence": "^2.0",
+                "symfony/framework-bundle": "^5.4 | ^6.0 | ^7.0",
+                "symfony/phpunit-bridge": "^5.4 | ^6.0 | ^7.0"
+            },
+            "type": "symfony-bundle",
+            "autoload": {
+                "psr-4": {
+                    "SymfonyCasts\\Bundle\\VerifyEmail\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "description": "Simple, stylish Email Verification for Symfony",
+            "support": {
+                "issues": "https://github.com/SymfonyCasts/verify-email-bundle/issues",
+                "source": "https://github.com/SymfonyCasts/verify-email-bundle/tree/v1.16.1"
+            },
+            "time": "2024-01-05T15:51:10+00:00"
+        },
+        {
             "name": "twig/extra-bundle",
             "version": "v3.8.0",
             "source": {
Index: symfony.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/symfony.lock b/symfony.lock
--- a/symfony.lock	
+++ b/symfony.lock	
@@ -332,6 +332,9 @@
             "config/routes/web_profiler.yaml"
         ]
     },
+    "symfonycasts/verify-email-bundle": {
+        "version": "v1.16.1"
+    },
     "twig/extra-bundle": {
         "version": "v3.8.0"
     }
Index: composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/composer.json b/composer.json
--- a/composer.json	
+++ b/composer.json	
@@ -48,6 +48,7 @@
         "symfony/validator": "6.4.*",
         "symfony/web-link": "6.4.*",
         "symfony/yaml": "6.4.*",
+        "symfonycasts/verify-email-bundle": "^1.16",
         "twig/extra-bundle": "^2.12|^3.0",
         "twig/twig": "^2.12|^3.0"
     },
Index: assets/SQL Scripts/Safatube.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/SQL Scripts/Safatube.sql b/assets/SQL Scripts/Safatube.sql
--- a/assets/SQL Scripts/Safatube.sql	
+++ b/assets/SQL Scripts/Safatube.sql	
@@ -31,6 +31,8 @@
 alter table usuario add column verification_token varchar(255);
 alter table usuario add column email varchar(255);
 alter table usuario add column cuenta_validada boolean not null default false;
+alter table usuario drop column cuenta_validada;
+alter table usuario add column is_verified boolean not null default false;
 
 
 CREATE TABLE token
@@ -71,7 +73,8 @@
 alter table canal drop column email;
 alter table canal add column banner varchar(5000);
 alter table canal drop column activo;
-alter table canal add column activo boolean not null default false;
+alter table canal add column activo boolean not null default true;
+alter table canal add column canal_validado boolean not null default false;
 
 
 create table tipo_notificacion
Index: src/Controller/RegistrationController.php
===================================================================
diff --git a/src/Controller/RegistrationController.php b/src/Controller/RegistrationController.php
new file mode 100644
--- /dev/null	
+++ b/src/Controller/RegistrationController.php	
@@ -0,0 +1,95 @@
+<?php
+
+namespace App\Controller;
+
+use App\Entity\Usuario;
+use App\Form\RegistrationFormType;
+use App\Repository\UsuarioRepository;
+use App\Security\EmailVerifier;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bridge\Twig\Mime\TemplatedEmail;
+use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Mime\Address;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
+use Symfony\Component\Routing\Annotation\Route;
+use Symfony\Contracts\Translation\TranslatorInterface;
+use SymfonyCasts\Bundle\VerifyEmail\Exception\VerifyEmailExceptionInterface;
+
+class RegistrationController extends AbstractController
+{
+    private EmailVerifier $emailVerifier;
+
+    public function __construct(EmailVerifier $emailVerifier)
+    {
+        $this->emailVerifier = $emailVerifier;
+    }
+
+    #[Route('/register', name: 'app_register')]
+    public function register(Request $request, UserPasswordHasherInterface $userPasswordHasher, EntityManagerInterface $entityManager): Response
+    {
+        $usuario = new Usuario();
+        $form = $this->createForm(RegistrationFormType::class, $usuario);
+        $form->handleRequest($request);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            // encode the plain password
+            $usuario->setPassword(
+                $userPasswordHasher->hashPassword(
+                    $usuario,
+                    $form->get('plainPassword')->getData()
+                )
+            );
+
+            $entityManager->persist($usuario);
+            $entityManager->flush();
+
+            // generate a signed url and email it to the usuario
+            $this->emailVerifier->sendEmailConfirmation('app_verify_email', $usuario,
+                (new TemplatedEmail())
+                    ->from(new Address('safatuberisk24@gmail.com', 'Safatube Risk 24 Bot'))
+                    ->to($usuario->getEmail())
+                    ->subject('Please Confirm your Email')
+                    ->htmlTemplate('registration/confirmation_email.html.twig')
+            );
+            // do anything else you need here, like send an email
+
+            return $this->redirectToRoute('api_login_check');
+        }
+
+        return $this->render('registration/register.html.twig', [
+            'registrationForm' => $form->createView(),
+        ]);
+    }
+
+    #[Route('/verify/email', name: 'app_verify_email')]
+    public function verifyUserEmail(Request $request, TranslatorInterface $translator, UsuarioRepository $usuarioRepository): Response
+    {
+        $id = $request->query->get('id');
+
+        if (null === $id) {
+            return $this->redirectToRoute('app_register');
+        }
+
+        $user = $usuarioRepository->find($id);
+
+        if (null === $user) {
+            return $this->redirectToRoute('app_register');
+        }
+
+        // validate email confirmation link, sets User::isVerified=true and persists
+        try {
+            $this->emailVerifier->handleEmailConfirmation($request, $user);
+        } catch (VerifyEmailExceptionInterface $exception) {
+            $this->addFlash('verify_email_error', $translator->trans($exception->getReason(), [], 'VerifyEmailBundle'));
+
+            return $this->redirectToRoute('app_register');
+        }
+
+        // @TODO Change the redirect on success and handle or remove the flash message in your templates
+        $this->addFlash('success', 'Your email address has been verified.');
+
+        return $this->redirectToRoute('app_register');
+    }
+}
Index: src/Entity/Usuario.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Usuario.php b/src/Entity/Usuario.php
--- a/src/Entity/Usuario.php	
+++ b/src/Entity/Usuario.php	
@@ -35,8 +35,11 @@
     #[ORM\Column(length:255, nullable:true)]
     private ?string $verification_token = null;
 
-    #[ORM\Column(name: 'cuenta_validada', type: 'boolean', nullable: true, options: ['default' => false])]
-    private ?bool $cuenta_validada = false;
+//    #[ORM\Column(name: 'cuenta_validada', type: 'boolean', nullable: true, options: ['default' => false])]
+//    private ?bool $cuenta_validada = false;
+
+    #[ORM\Column(type: 'boolean')]
+    private $isVerified = false;
 
 
 
@@ -162,6 +165,18 @@
     {
         $this->cuenta_validada = $cuenta_validada;
 
+        return $this;
+    }
+
+    public function isVerified(): bool
+    {
+        return $this->isVerified;
+    }
+
+    public function setIsVerified(bool $isVerified): static
+    {
+        $this->isVerified = $isVerified;
+
         return $this;
     }
 
Index: config/routes.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/routes.yaml b/config/routes.yaml
--- a/config/routes.yaml	
+++ b/config/routes.yaml	
@@ -4,20 +4,17 @@
         namespace: App\Controller
     type: attribute
 
-api_login_check:
-    path: /api/login_check
-
 registrar_usuario:
-    path: /api/registro
-    controller: App\Controller\RegistroController::register
+    path: /api/register
+    controller: App\Controller\RegistrationController::register
     methods: ['POST']
 
 verificar_usuario:
-    path: /api/registro/verificar/{token}
-    controller: App\Controller\RegistroController::verifyUser
+    path: /api/register/verificar/{token}
+    controller: App\Controller\RegistrationController::verifyUser
     methods: ['GET']
 
 reenviar_verificacion:
-    path: /api/registro/reenviar
-    controller: App\Controller\RegistroController::resendVerificationEmail
+    path: /api/register/reenviar
+    controller: App\Controller\RegistrationController::resendVerificationEmail
     methods: ['POST']
Index: src/Form/RegistrationFormType.php
===================================================================
diff --git a/src/Form/RegistrationFormType.php b/src/Form/RegistrationFormType.php
new file mode 100644
--- /dev/null	
+++ b/src/Form/RegistrationFormType.php	
@@ -0,0 +1,59 @@
+<?php
+
+namespace App\Form;
+
+use App\Entity\Usuario;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
+use Symfony\Component\Form\Extension\Core\Type\EmailType;
+use Symfony\Component\Form\Extension\Core\Type\PasswordType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+use Symfony\Component\Validator\Constraints\IsTrue;
+use Symfony\Component\Validator\Constraints\Length;
+use Symfony\Component\Validator\Constraints\NotBlank;
+
+class RegistrationFormType extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options): void
+    {
+        $builder
+            ->add('email', EmailType::class)
+            ->add('username')
+            ->add('agreeTerms', CheckboxType::class, [
+                                'mapped' => false,
+                'constraints' => [
+                    new IsTrue([
+                        'message' => 'Debes aceptar nuestros términos de uso.',
+                    ]),
+                ],
+            ])
+            ->add('plainPassword', PasswordType::class, [
+                                // instead of being set onto the object directly,
+                // this is read and encoded in the controller
+                'mapped' => false,
+                'attr' => ['autocomplete' => 'new-password'],
+                'constraints' => [
+                    new NotBlank([
+                        'message' => 'Please enter a password',
+                    ]),
+                    new Length([
+                        'min' => 6,
+                        'minMessage' => 'Your password should be at least {{ limit }} characters',
+                        // max length allowed by Symfony for security reasons
+                        'max' => 4096,
+                    ]),
+                ],
+            ])
+        ;
+    }
+
+    public function configureOptions(OptionsResolver $resolver): void
+    {
+        $resolver->setDefaults([
+            'data_class' => Usuario::class,
+        ]);
+    }
+
+
+}
Index: src/Security/EmailVerifier.php
===================================================================
diff --git a/src/Security/EmailVerifier.php b/src/Security/EmailVerifier.php
new file mode 100644
--- /dev/null	
+++ b/src/Security/EmailVerifier.php	
@@ -0,0 +1,53 @@
+<?php
+
+namespace App\Security;
+
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bridge\Twig\Mime\TemplatedEmail;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\Mailer\MailerInterface;
+use Symfony\Component\Security\Core\User\UserInterface;
+use SymfonyCasts\Bundle\VerifyEmail\Exception\VerifyEmailExceptionInterface;
+use SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelperInterface;
+
+class EmailVerifier
+{
+    public function __construct(
+        private VerifyEmailHelperInterface $verifyEmailHelper,
+        private MailerInterface $mailer,
+        private EntityManagerInterface $entityManager
+    ) {
+    }
+
+    public function sendEmailConfirmation(string $verifyEmailRouteName, UserInterface $user, TemplatedEmail $email): void
+    {
+        $signatureComponents = $this->verifyEmailHelper->generateSignature(
+            $verifyEmailRouteName,
+            $user->getId(),
+            $user->getEmail(),
+            ['id' => $user->getId()]
+        );
+
+        $context = $email->getContext();
+        $context['signedUrl'] = $signatureComponents->getSignedUrl();
+        $context['expiresAtMessageKey'] = $signatureComponents->getExpirationMessageKey();
+        $context['expiresAtMessageData'] = $signatureComponents->getExpirationMessageData();
+
+        $email->context($context);
+
+        $this->mailer->send($email);
+    }
+
+    /**
+     * @throws VerifyEmailExceptionInterface
+     */
+    public function handleEmailConfirmation(Request $request, UserInterface $user): void
+    {
+        $this->verifyEmailHelper->validateEmailConfirmation($request->getUri(), $user->getId(), $user->getEmail());
+
+        $user->setIsVerified(true);
+
+        $this->entityManager->persist($user);
+        $this->entityManager->flush();
+    }
+}
Index: config/bundles.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/bundles.php b/config/bundles.php
--- a/config/bundles.php	
+++ b/config/bundles.php	
@@ -16,4 +16,5 @@
     Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle::class => ['all' => true],
     ApiPlatform\Symfony\Bundle\ApiPlatformBundle::class => ['all' => true],
     Nelmio\CorsBundle\NelmioCorsBundle::class => ['all' => true],
+    SymfonyCasts\Bundle\VerifyEmail\SymfonyCastsVerifyEmailBundle::class => ['all' => true],
 ];
Index: .env
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.env b/.env
--- a/.env	
+++ b/.env	
@@ -38,7 +38,7 @@
 
 ###> symfony/mailer ###
 # MAILER_DSN=null://null
-MAILER_DSN=gmail://safatuberisk24@gmail.com:SafatubeRisk2024
+#MAILER_DSN=gmail://safatuberisk24@gmail.com:SafatubeRisk2024
 
 ###< symfony/mailer ###
 
@@ -60,4 +60,6 @@
 ###> symfony/google-mailer ###
 # Gmail SHOULD NOT be used on production, use it in development only.
 # MAILER_DSN=gmail://USERNAME:PASSWORD@default
+MAILER_DSN=gmail+smtp://safatuberisk24@gmail.com:SafatubeRisk2024@smtp.gmail.com?encryption=tls&auth_mode=login&host=smtp.gmail.com&port=587
+
 ###< symfony/google-mailer ###
Index: templates/registration/confirmation_email.html.twig
===================================================================
diff --git a/templates/registration/confirmation_email.html.twig b/templates/registration/confirmation_email.html.twig
new file mode 100644
--- /dev/null	
+++ b/templates/registration/confirmation_email.html.twig	
@@ -0,0 +1,12 @@
+<h1>Hola! Por favor, confirme su EMAIL!</h1>
+
+<p>
+    Por favor, confirme su dirección de email clickando en el siguiente enlace: <br><br>
+    <a href="{{ signedUrl|raw }}">Confirmar mi Email</a>.
+    This link will expire in {{ expiresAtMessageKey|trans(expiresAtMessageData, 'VerifyEmailBundle') }}.
+</p>
+
+<p>
+    Saludos!
+    SAFATUBERISK24.
+</p>
Index: templates/registration/register.html.twig
===================================================================
diff --git a/templates/registration/register.html.twig b/templates/registration/register.html.twig
new file mode 100644
--- /dev/null	
+++ b/templates/registration/register.html.twig	
@@ -0,0 +1,24 @@
+{% extends 'base.html.twig' %}
+
+{% block title %}Register{% endblock %}
+
+{% block body %}
+    {% for flash_error in app.flashes('verify_email_error') %}
+        <div class="alert alert-danger" role="alert">{{ flash_error }}</div>
+    {% endfor %}
+
+    <h1>Register</h1>
+
+    {{ form_errors(registrationForm) }}
+
+    {{ form_start(registrationForm) }}
+        {{ form_row(registrationForm.email) }}
+        {{ form_row(registrationForm.username) }}
+        {{ form_row(registrationForm.plainPassword, {
+            label: 'Password'
+        }) }}
+        {{ form_row(registrationForm.agreeTerms) }}
+
+        <button type="submit" class="btn">Register</button>
+    {{ form_end(registrationForm) }}
+{% endblock %}
